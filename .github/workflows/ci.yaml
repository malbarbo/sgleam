name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint & Format (Linux)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run Clippy
        run: cargo clippy -- -D warnings

  wasm:
    name: Test wasm
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-wasip1

      - name: Setup Deno
        uses: denoland/setup-deno@v1

      - name: Build
        run: cargo build --target wasm32-wasip1 --release

      - name: Copy sgleam.wasm
        run: cp target/wasm32-wasip1/release/sgleam.wasm web/

      - name: Test
        run: deno test --allow-read web/test.js

  test:
    name: Test (${{ matrix.os }} / ${{ matrix.target }})
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            target: x86_64-unknown-linux-musl
            setup: sudo apt-get install musl-tools

          - os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-musl
            setup: sudo apt-get install musl-tools

          - os: windows-2022
            target: x86_64-pc-windows-msvc
            setup: git config --global core.longpaths true

          - os: macos-13
            target: x86_64-apple-darwin
            setup: ""

          - os: macos-latest
            target: aarch64-apple-darwin
            setup: ""

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Setup
        if: matrix.setup != ''
        run: ${{ matrix.setup }}

      - name: Run tests
        run: cargo test --target ${{ matrix.target }}
